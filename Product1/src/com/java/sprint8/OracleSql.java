package com.java.sprint8;

public class OracleSql {
    /*
    * Find the total number of orders in the "orders" table.
    * SELECT COUNT(*) AS total_orders FROM orders ;
    *
    *
    * Calculate the average salary of all employees.
    * SELECT AVG(employee_salary) FROM employee;
    *
    *
    * List all customers who have placed orders.
    * we have to use join
    * SELECT DISTINCT c.customer_id, c.customer_name
    * FROM customer c
    * JOIN orders o ON c.customer_id =o.customer_id;
    *
    *
    * Retrieve the names of customers who have not placed any orders.
    * SELECT c.customer_name
    * FROM customer c
    * LEFT JOIN orders o ON c.customer_id =o.customer_id
    * WHERE o.customer_id is NULL;
    *
    *
    *
    *
    *
    *
    * List all employees who joined the company after 2010.
    * SELECT*
    * FROM employees
    * WHERE hire_date > DATE'2010-01-01';
    *
    *
    *
    * Identify the employee with the highest salary.
    * SELECT*
    * FROM employee
    * WHERE employee_salary =(SELECT MAX(employee_salary) FROM employee);
    *
    *
    * Determine the number of products in each category.
    * SELECT category , COUNT(*) AS num_products
    * FROM products
    * GROUP BY category;
    *
    *
    *
    *
    *
    *
    * Find the top 5 customers with the highest order amounts.
    * SELECT c.customer_id, c.customer_name, SUM(o.order_amount) AS total_order_amount
    * FROM customers c
    * JOIN orders o ON c.customer_id =o.customer_id
    * GROUP BY c.customer_id, c.customer_name
    * ORDER BY total_order_amount DESC
    * FETCH FIRST 5 ROWS ONLY;
    *
    *
    *
    * Display the order details for a specific customer.
    * SELECT o.order_id, o.order_date, o.order_amount
    * FROM orders o
    * JOIN customers c ON o.customer_id=c.customer_id
    * WHERE c.customer_id ='your_customer_id;
    *
    *
    * Identify duplicate entries in the "customers" table.
    * SELECT customer_name, email, COUNT(*)
    * FROM customer
    * GROUP BY customer_name, email
    * HAVING COUNT(*)>1;
    *
    *
    *
    * Calculate the total revenue generated by each product.
    * SELECT p.product_id, p.product_name, SUM(od.quantity*od.unit_price) AS total_revenue
    * FROM products p
    * JOIN order_details od ON p.product_id =od.product_id
    * GROUP BY p.product_id, p.product_name;
    *
    * Find the average order amount for each customer.
    * SELECT c.customer_id, c.customer_name, AVG(o.order_amount) AS avg_order_amount
    * FROM customers c
    * JOIN orders o ON c.customer_id=o.customer_id
    * GROUP BY c.customer_id, c.customer_name;
    *
    *
    *
    * Find the total sales for each product.
    * SELECT p.product_id, p.product_name, SUM(o.quantity*o.price) AS total_sales
    * FROM products p
    * JOIN orders o ON p.product_id =o.product_id
    * GROUP BY p.product_id, p.product_name;
    *
    *
    * List the names of employees who have not completed any training courses.
    * SELECT e.employee_name
    * FROM employee e
    * LEFT JOIN employee_courses ec ON e.employee_id =ec.employee_id
    * WHERE ec.employee_id IS NULL;
    *
    *
    * 
    *
    *
    *
    *
    *
    *
    *
    *
    *
    * */
}
